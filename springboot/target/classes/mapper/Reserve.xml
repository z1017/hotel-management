<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.ReserveMapper">

    <select id="listByCondition" resultType="com.example.springboot.entity.Reserve">
        select * from reserve
        <where>
            <if test="hotelName != null and hotelName != ''">
                hotel_name like concat('%', #{hotelName }, '%')
            </if>
            <if test="hotelNo != null and hotelNo != ''">
                and hotel_no = #{hotelNo}
            </if>
            <if test="userName != null and userName != ''">
                -- and
                user_name like concat('%', #{ userName }, '%')
            </if>

        </where>
        order by id desc
    </select>


    <select id="listReturByCondition" resultType="com.example.springboot.entity.Retur">
        select * from retur
        <where>
            <if test="hotelName != null and hotelName != ''">
                hotel_name like concat('%', #{hotelName}, '%')
            </if>
            <if test="hotelNo != null and hotelNo != ''">
                and hotel_no = #{hotelNo}
            </if>
            <if test=" userName  != null and  userName  != ''">
                and user_name like concat('%', #{ userName }, '%')
            </if>
        </where>
        order by id desc
    </select>


    <insert id="saveRetur">
        insert into retur(hotel_name, hotel_no, user_no, user_name, user_phone, score, days, return_date, real_date,
                          status)
        values (#{hotelName}, #{hotelNo}, #{userNo}, #{userName}, #{userPhone}, #{score}, #{days}, #{returnDate},
                #{realDate}, #{status})
    </insert>


    <insert id="save">
        insert into reserve(hotel_name, hotel_no, user_no, user_name, user_phone, score, return_date, days)
        values (#{hotelName}, #{hotelNo}, #{userNo}, #{userName}, #{userPhone}, #{score}, #{returnDate},
                #{days})
    </insert>

    <update id="updateById">
        update reserve
        set hotel_name  = #{hotelName},
            hotel_no    = #{hotelNo},
            user_no     = #{userNo},
            user_name   = #{userName},
            user_phone  = #{userPhone},
            score       = #{score},
            status      = #{status},
            days        = #{days},
            return_date = #{returnDate},
            updatetime  = #{updatetime}
        where id = #{id}
    </update>

    <update id="updateStatus">
        update reserve
        set status = #{status}
        where id = #{id}
    </update>


    <delete id="deleteById">
        delete
        from reserve
        where id = #{id}
    </delete>
    <delete id="deleteReturById">
        delete
        from retur
        where id = #{id}
    </delete>

    <select id="list" resultType="com.example.springboot.entity.Reserve">
        select *
        from reserve
        order by id desc
    </select>

    <select id="getById" resultType="com.example.springboot.entity.Reserve">
        select *
        from reserve
        where id = #{id}
    </select>

    <select id="getCountByTimeRange" resultType="com.example.springboot.mapper.po.ReserveReturCountPO">
        -- DATE_FORMAT(createtime,'%Y-%m-%d') 把datetime类型的数据格式化成 yyyy-MM-dd
        select count(id) as count, DATE_FORMAT(createtime,'%Y-%m-%d') as date from
        <if test="type == 1">
            reserve
        </if>
        <if test="type == 2">
            retur
        </if>
        where
        <choose>
            <when test="timeRange == 'week'">
                createtime >= DATE_SUB(NOW(),INTERVAL 1 WEEK) -- DATE_SUB 就是数据库进行时间计算的函数
            </when>
            <when test="timeRange == 'month'">
                createtime >= DATE_SUB(NOW(),INTERVAL 1 MONTH)
            </when>
            <when test="timeRange == 'month2'">
                createtime >= DATE_SUB(NOW(),INTERVAL 2 MONTH)
            </when>
            <when test="timeRange == 'month3'">
                createtime >= DATE_SUB(NOW(),INTERVAL 3 MONTH)
            </when>
            <otherwise>
                createtime > now()
            </otherwise>
        </choose>
        group by date
    </select>
</mapper>